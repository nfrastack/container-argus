# SPDX-FileCopyrightText: Â© 2025 Nfrastack <code@nfrastack.com>
#
# SPDX-License-Identifier: MIT

argus_bootstrap_filesystem() {
    create_folder \
                "${CONFIG_PATH},\
                ${DATA_PATH}" \
                argus:argus 755

    if [ "${LOG_TYPE,,}" = "both" ] || [ "${LOG_TYPE,,}" = "file" ] ; then
        if [ ! -d "${LOG_PATH}" ] ; then
            create_folder \
                            "${LOG_PATH}" \
                            argus:argus 755
        fi
        create_logrotate argus "${LOG_PATH}"/"${LOG_FILE}" argus argus argus
    fi
}

argus_configure_application() {
    transform_var file \
                            ADMIN_PASS \
                            ADMIN_USER \
                            DEFAULT_SERVICE_LATEST_VERSION_ACCESS_TOKEN
    update_template /etc/nginx/sites.available/argus.conf LISTEN_PORT
    if var_false "${RESTART_ON_CONFIG_CHANGE}" ; then
        rm -rf /container/run/available/21-argus-config-reload
    fi
    if [ "${SETUP_TYPE,,}" = "auto" ] || [ ! -f "${CONFIG_PATH}"/"${CONFIG_FILE}" ] ; then
        print_notice "[configure_argus] Configuring Argus settings"
        s6-setuidgid argus yq -i    '
                                        .settings.log.level = env(LOG_LEVEL) |
                                        .settings.log.timestamps = true |
                                        .settings.data.database_file = "'$(echo "${DATA_PATH}/${DATA_FILE}")'" |
                                        .settings.web.listen_host = env(LISTEN_IP) |
                                        .settings.web.listen_port = env(LISTEN_PORT) |
                                        .settings.web.route_prefix = env(LISTEN_PREFIX) |
                                        .settings.basic_auth.username = env(ADMIN_USER) |
                                        .settings.basic_auth.password = env(ADMIN_PASS)
                                    ' "${CONFIG_PATH}"/"${CONFIG_FILE}"

        if [ -n "${DEFAULT_SERVICE_CHECK_INTERVAL}" ] ; then
            s6-setuidgid argus yq -i    '
                                            .defaults.service.options.interval = env(DEFAULT_SERVICE_CHECK_INTERVAL)
                                        ' "${CONFIG_PATH}"/"${CONFIG_FILE}"
        fi

        if [ -n "${DEFAULT_SERVICE_LATEST_VERSION_ACCESS_TOKEN}" ] ; then
            s6-setuidgid argus yq -i    '
                                            .defaults.service.latest_version.access_token = env(DEFAULT_SERVICE_LATEST_VERSION_ACCESS_TOKEN)
                                        ' "${CONFIG_PATH}"/"${CONFIG_FILE}"
        fi

        if ! grep -q "^service:" "${CONFIG_PATH}"/"${CONFIG_FILE}" ; then
            cat /container/data/argus/config.yml.example | silent sudo -u argus tee -a "${CONFIG_PATH}"/"${CONFIG_FILE}"
        fi
    else
        print_notice "[configure_argus] Manual settings mode detected - Skipping configuring Argus settings"
    fi
}